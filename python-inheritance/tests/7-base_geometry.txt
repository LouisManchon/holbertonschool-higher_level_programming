>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 12.2)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", "string")
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", True)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", (1, 2))
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", [1, 2])
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", {1, 2})
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
